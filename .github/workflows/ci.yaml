name: Continuous Integration

on:
  push:
    branches: [ '*' ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  GO_VERSION: '1.19'

jobs:
  swagger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Get Swag
        run: |
          wget https://github.com/swaggo/swag/releases/download/v1.8.6/swag_1.8.6_Linux_x86_64.tar.gz -O swag.tar.gz
          tar -xzf swag.tar.gz swag
          rm swag.tar.gz
          chmod +x swag
      - run: ./swag init
      - uses: UnicornGlobal/has-changes-action@v1.0.12
        id: changed
      - if: steps.changed.outputs.changed == 1
        name: Please run swag init and check the new docs in
        run: exit 1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/_go.sum') }}

      - uses: golangci/golangci-lint-action@v3

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/_go.sum') }}

      - name: Install dependencies
        run: go get .

      - name: Test
        run: go test -v -race ./... 

  build:
    needs: [ lint, test ]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - id: commit
        uses: pr-mpt/actions-commit-hash@v1
        with:
            commit: "${{ github.sha }}"

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/_go.sum') }}
      
      - name: Install dependencies
        run: go get .

      - name: Build
        run: go build -ldflags="-X main.Version=${{ steps.commit.outputs.short }}" -o bin/helpwave -v
      
      - uses: actions/upload-artifact@v3
        with:
          name: helpwave
          path: bin/helpwave
      
  docker:
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=branch,prefix=branch-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - uses: docker/setup-qemu-action@v2
      
      - uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - uses: actions/download-artifact@v3
        with:
          name: helpwave
          path: bin/helpwave

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64  #,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Check manifest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}
  deploy:
    needs: [ docker ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: deploying via ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SSH_HOSTNAME }}
        username: ${{ secrets.DEPLOY_SSH_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_PRIVATEKEY }}
        port: ${{ secrets.DEPLOY_SSH_PORT }}
        script: ./pull.sh
